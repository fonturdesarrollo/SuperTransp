@model SuperTransp.Models.DriverViewModel
@{
	Layout = "";
}
<!DOCTYPE HTML>
<html>
<head>
	<title>Agregar Socio</title>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no" />
	<link rel="stylesheet" href="~/assets/css/main.css" />
	<noscript><link rel="stylesheet" href="~/assets/css/noscript.css" /></noscript>
    <link rel="icon" type="image/x-icon" href="~/images/Logo.ico" />

	@* Air DatePicker ******************************************************************************* *@
    <link href="~/plugins/airdatepicker/air-datepicker.min.css" rel="stylesheet" />
	@* *************************************************************************************************** *@

	@* Iconos QR *@
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">

	<!-- Bootstrap CSS -->
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">

	<!-- Bootstrap JS (con Popper incluido) -->
	<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

	@*DataTable************************************************************************@
	<link rel="stylesheet" href="~/datatable/css/bootstrap.css" />
	<link rel="stylesheet" href="~/datatable/css/dataTables.bootstrap4.min.css" />
	<link rel="stylesheet" href="~/datatable/css/responsive.bootstrap4.min.css" />
	@*************************************************************************************@
	<style>
		.is-invalid {
			border: 2px solid red;
			background-color: #ffe6e6;
		}

		.view-info {
			border: none;
			background: none;
			height: 30px;
			outline: none;
			box-shadow: none;
		}

		.view-info:focus, .view-info:active {
			outline: none !important;
			box-shadow: none !important;
		}

		body.modal-open {
			overflow: auto !important;
		}

		.modal {
			z-index: 1050 !important;
		}

		.readonly-style {
			pointer-events: none;
			background-color: #eee;
		}
	</style>
</head>
<body class="is-preload">
	@using (Html.BeginForm("Add", "Driver", FormMethod.Post))
	{
		@Html.AntiForgeryToken()
		<!-- Wrapper -->
		<div id="wrapper">

			<!-- Header -->
			<header id="header">
				<div class="inner">

					<!-- Logo -->
					<a href="#" class="logo">
						<span><img src="~/images/Logo.png" width="100px" height="100px" alt="" /></span>
						<br />
						<span class="title">@ViewBag.EmployeeName</span>
						<br />
						@if (TempData["SuccessMessage"] != null)
						{
							<div id="successMessage" class="alert alert-success">
								@TempData["SuccessMessage"]
							</div>
						}
					</a>
				</div>
				<!-- Nav -->
				<nav>
					<ul>
						<li><a href="#menu">Menu</a></li>
					</ul>
				</nav>
			</header>

			<!-- Menu -->
			<nav id="menu">
				<h2>Menu</h2>
				<ul>
					<li>@Html.ActionLink("Inicio", "Index", "Home")</li>
					<li>@Html.ActionLink("Agregar socios a organización", "PublicTransportGroupList", "Driver")</li>
					<li>@Html.ActionLink("Agregar organización", "Add", "PublicTransportGroup")</li>
					<li>@Html.ActionLink("Modificar organización", "PublicTransportGroupList", "PublicTransportGroup")</li>
					<li>@Html.ActionLink("Socios/Transportistas", "Index", "Driver")</li>
					<li>@Html.ActionLink("Salir", "Login", "Security")</li>
				</ul>
			</nav>

			<!-- Main -->
			<div id="main">
				<div class="inner">
					<!-- Form -->
					<section>
						<h1 style="color:#4cbece">Agregar socio</h1>
						<label>Organización: @Model.PTGCompleteName</label>
						<br />
						<label>Cupo: @ViewBag.Partners</label>
						<br />
						<br />
						<br />
						<div class="row gtr-uniform">
							<div class="col-6">
								<strong>Cédula:</strong>
								@Html.HiddenFor(x => x.PTGCompleteName)
								@Html.HiddenFor(x => x.PublicTransportGroupId)
								@Html.TextBoxFor(x => x.DriverIdentityDocument, new { placeholder = "Cédula", tabindex = "0", maxlength = "8" })
								<span asp-validation-for="DriverIdentityDocument" class="text-danger"></span>
							</div>
							<div class="col-6 col-12-xsmall">
								<strong>Nombre:</strong>
								@Html.TextBoxFor(x => x.DriverFullName, new { placeholder = "Nombre del transportista", tabindex = "0", maxlength = "20" })
							</div>
							<div class="col-6">
								<strong>Sexo:</strong>
								@Html.DropDownListFor(t => t.SexId, (SelectList)ViewBag.Sex, "-- Seleccione --", new { @class = "form-control" })
							</div>
							<div class="col-6">
								<strong>Fecha de nacimiento:</strong>
								@Html.TextBox("Birthdate", Model.Birthdate.ToString("dd/MM/yyyy"), new { maxlength = "20" })
							</div>
							<div class="col-6">
								<strong>Número de Socio:</strong>
								@Html.TextBoxFor(x => x.PartnerNumber, new { placeholder = "Número de socio", maxlength = "3" })
								<span asp-validation-for="PartnerNumber" class="text-danger"></span>
							</div>
							<div class="col-6">
								<strong>Teléfono:</strong>
								@Html.TextBoxFor(x => x.DriverPhone, new { placeholder = "Teléfono del transportista", maxlength = "11" })
								<span asp-validation-for="DriverPhone" class="text-danger"></span>
							</div>
							<div class="col-12">
								<ul class="actions">
									@{
										if (ViewBag.IsTotalAccess)
										{
											<li><button type="submit" id="saveRequest" class="primary">Agregar a la organización</button></li>
										}
									}									
								</ul>
							</div>
						</div>	
					</section>
					<section>
						<br />
						<br />
						<h4 style="color:#4cbece">Socios asignados a la organización</h4>
						<br />
						<table id="inventory" class="table table-striped table-bordered dt-responsive nowrap" style="width:100%">
							<thead>
								<tr>
									<th>Nombre</th>
									<th>Cédula</th>
									<th># Socio</th>
									<th># Teléfono</th>
									<th>Modificar</th>
									<th>Eliminar</th>
									<th>QR</th>
								</tr>
							</thead>
							<tbody>
								@foreach (var driver in ViewBag.Drivers)
								{
									
									var driverUrl = $"{driver.PublicTransportGroupGUID}|{driver.PartnerNumber}";
									
									<tr data-ptgguid=@driverUrl>

										<td>@driver.DriverFullName</td>
										<td>@driver.DriverIdentityDocument</td>
										<td>@driver.PartnerNumber</td>
										<td>@driver.DriverPhone</td>
										<td id="@driver.PublicTransportGroupId">
											@{
												if(ViewBag.IsTotalAccess)
												{
													@Html.ActionLink("MODIFICAR", "Edit", "Driver", new { driverPublicTransportGroupId = driver.DriverPublicTransportGroupId }, new { @id = "btnEdit" })
												}
												else
												{
													<span>SOLO LECTURA</span>
												}
											}											
										</td>
										<td id="@driver.DriverPublicTransportGroupId">
											@{
												if (ViewBag.IsTotalAccess)
												{
													<a href="javascript:void(0);"
													   id="btnDelete"
													   onclick="confirmDeletion('@Url.Action("Delete", "Driver", new { driverId = @driver.DriverId, publicTransportGroupId = @driver.PublicTransportGroupId, pTGCompleteName = @driver.PTGCompleteName })')">
														ELIMINAR
													</a>
												}
												else
												{
													<span>SOLO LECTURA</span>
												}
											}			
										</td>
										<td>
											<button class="generateQR view-info p-1" type="button">
												<i class="bi bi-qr-code"></i>
											</button>
										</td>
									</tr>
								}
							</tbody>
						</table>
					</section>
				</div>
			</div>
		</div>

	<!-- Modal -->
	<div class="modal fade" id="qrModal" tabindex="-1" aria-labelledby="qrModalLabel" aria-hidden="true">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title">Código QR</h5>
					<button type="button" class="close" data-bs-dismiss="modal">&times;</button>
				</div>
				<div class="modal-body text-center">
					<img id="qrImage" src="" alt="Código QR" class="img-fluid" />
				</div>
			</div>
		</div>
	</div>

	}
	<!-- Scripts -->
	<script src="~/assets/js/jquery.min.js"></script>
	<script src="~/assets/js/browser.min.js"></script>
	<script src="~/assets/js/breakpoints.min.js"></script>
	<script src="~/assets/js/util.js"></script>
	<script src="~/assets/js/main.js"></script>

	@* Air DatePicker ******************************************************************************* *@
    <script src="~/plugins/airdatepicker/air-datepicker.min.js"></script>
	@* *********************************************************************************************** *@

	@*DataTable*******************************************@
	<script src="~/datatable/js/jquery-3.5.1.js"></script>
	<script src="~/datatable/js/jquery.dataTables.min.js"></script>
	<script src="~/datatable/js/dataTables.bootstrap4.js"></script>
	<script src="~/datatable/js/dataTables.responsive.min.js"></script>
	<script src="~/datatable/js/responsive.bootstrap4.min.js"></script>

	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}

	<script type="text/javascript">

		document.addEventListener("DOMContentLoaded", function() {
			new AirDatepicker('#Birthdate', {
				dateFormat: 'dd/MM/yyyy',
				locale: {
					days: ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado'],
					daysShort: ['Dom', 'Lun', 'Mar', 'Mié', 'Jue', 'Vie', 'Sáb'],
					daysMin: ['D', 'L', 'M', 'Mi', 'J', 'V', 'S'],
					months: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],
					monthsShort: ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic'],
					today: 'Hoy',
					clear: 'Borrar',
					dateFormat: 'dd/MM/yyyy',
					firstDay: 1
				},
				autoClose: true,
				minDate: new Date(1920, 0, 1),
				maxDate: new Date(2030, 11, 31)
			});
		});

		document.addEventListener("DOMContentLoaded", function() {
			var input = document.getElementById("Birthdate");

			input.addEventListener("change", function() {
				var regex = /^(0[1-9]|[12][0-9]|3[01])\/(0[1-9]|1[0-2])\/[0-9]{4}$/;
				if (!regex.test(this.value)) {
					alert("Formato de fecha inválido, debe ser DD/MM/YYYY.");
					this.value = "";
				}
			});
		});

		function confirmDeletion(url) {
			const userConfirmed = confirm("¿Está seguro de que desea eliminar este registro?, de tenerla cargada, se borran los datos de la supervisión (vehículos e imágenes)");
			if (userConfirmed) {
				window.location.href = url;
			}
		}

		document.addEventListener("DOMContentLoaded", function () {
			function handleInput(selector, transformFunction) {
				const inputElement = document.querySelector(selector);
				if (inputElement) {
					inputElement.addEventListener("input", function () {
						const start = inputElement.selectionStart;
						const end = inputElement.selectionEnd;

						const transformed = transformFunction(inputElement.value);

						if (inputElement.value !== transformed) {
							inputElement.value = transformed;
							inputElement.setSelectionRange(start, end);
						}
					});
				}
			}

			handleInput("[name='DriverIdentityDocument']", function (value) {
				return value.replace(/[^0-9]/g, "");
			});

			handleInput("[name='DriverFullName']", function (value) {
				return value
					.normalize("NFD")
					.replace(/[\u0300-\u036f]/g, "")
					.toUpperCase();
			});

			handleInput("[name='PartnerNumber']", function (value) {
				return value.replace(/[^0-9]/g, "");
			});

			handleInput("[name='DriverPhone']", function (value) {
				return value.replace(/[^0-9]/g, "");
			});
		});

		$("body").on("click", "#saveRequest", function (event) {
			event.preventDefault();

			if (!isOkToSave()) {
				return false;
			}

			if (!confirm("¿Está seguro de que desea actualizar los registros?")) {
				return false;
			}

			$(this).closest("form").trigger("submit");
		});

		$("form").on("submit", function (e) {
			e.preventDefault();

			if ($(this).valid()) {
				var paramValue2 = $('#PublicTransportGroupId').val();
				var paramValue4 = $('#PartnerNumber').val();
				var checkExistingUrl = '@Url.Action("CheckExistingValues", "Driver")';
				$.ajax({
					url: checkExistingUrl,
					data: {
						paramValue2: paramValue2,
						paramValue4: paramValue4
					},
					success: function (data) {
						showMsg(data);
					},
					cache: false
				});
			}
		});

		function isOkToSave() {
			let firstInvalidField = null;
			let message = "";

			if ($("#DriverIdentityDocument").val() == "" && !firstInvalidField) {
				firstInvalidField = "#DriverIdentityDocument";
				message = "Debe colocar la cédula del transportista";
			}

			if (!firstInvalidField) {
				const identityValue = $("#DriverIdentityDocument").val();

				if (identityValue == "" || identityValue.length < 7) {
					firstInvalidField = "#DriverIdentityDocument";
					message = "Debe colocar un número de cédula válido";
				}
			}

			if ($("#DriverFullName").val() == "" && !firstInvalidField) {
				firstInvalidField = "#DriverFullName";
				message = "Debe colocar el nombre del transportista";
			} else {
				const driverFullName = $("#DriverFullName").val().trim();
				const regex = /^[a-zA-Z\s]{5,}$/;

				if (!regex.test(driverFullName)) {
					if (!firstInvalidField) {
						firstInvalidField = "#DriverFullName";
					}
					message = "El nombre debe contener solo letras y espacios, y al menos 5 caracteres.";
				}
			}

			if ($("#SexId").val() == ""  &&  !firstInvalidField) {
				firstInvalidField = "#SexId";
				message = "Debe indicar el sexo";
			}

			if ($("#PartnerNumber").val() != "" &&  $("#PartnerNumber").val() == "0" && !firstInvalidField) {
				firstInvalidField = "#PartnerNumber";
				message = "El número de socio no puede ser cero";
			}

			if ($("#PartnerNumber").val() == "" && !firstInvalidField) {
				firstInvalidField = "#PartnerNumber";
				message = "Debe colocar el número de socio";
			}

			if ($("#RepresentativePhone").val() == "" && !firstInvalidField) {
				firstInvalidField = "#RepresentativePhone";
				message = "Debe colocar el número de teléfono del representante";
			}

			if (!firstInvalidField) {
				const identityValue = $("#DriverPhone").val();

				if (identityValue == "" || identityValue.length < 11) {
					firstInvalidField = "#DriverPhone";
					message = "Debe colocar un número de télefono válido";
				}
			}


			if (firstInvalidField) {
				showAlert(message, firstInvalidField);
				return false;
			}

			return true;
		}

		function showAlert(message, selector) {
			alert(message);
			highlightErrorField(selector);
			$(selector).focus();
		}

		function highlightErrorField(selector) {
			$(selector).addClass("is-invalid");
			$(selector).on("input", function () {
				$(this).removeClass("is-invalid");
			});

			$(selector)[0].scrollIntoView({ behavior: "smooth", block: "center" });
		}

		function showMsg(hasCurrentJob) {
			if (hasCurrentJob != "OK") {
				alert(hasCurrentJob);
				return false;
			} else {

				$("form").unbind('submit').submit();
			}
		}

		$(document).ready(function () {
			setTimeout(function(){
				$("#successMessage").fadeOut("slow");
			}, 2500);

		$(document).on("click", ".generateQR", function () {
			var ptgGUID = $(this).closest("tr").data("ptgguid");
			var generateQRUrl = '@Url.Action("GenerateQR", "Driver")';

			$.ajax({
				url: generateQRUrl,
				type: "POST",
				headers: {
					"RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
				},
				contentType: "application/json",
				data: JSON.stringify({ ptgGUID: ptgGUID }),
				dataType: "json",
				success: function (response) {
					$("#qrImage").attr("src", response.qrImage);
					var myModal = new bootstrap.Modal(document.getElementById('qrModal'));
					myModal.show();
				},
				error: function () {
					alert("Error al generar el código QR.");
				}
			});
		});

		$("#DriverIdentityDocument").on("blur keypress", function (event) {
			if (event.type === "blur" || (event.type === "keypress" && event.which === 13)) {
				event.preventDefault();
				let inputValue = $(this).val();
				llamarControlador(inputValue);
			}
		});
			
		$('#DriverFullName').on('input', function() {
			const value = $(this).val();
			const sanitizedValue = value.replace(/[^a-zA-Z\s]/g, '');
			$(this).val(sanitizedValue); 
		});

		function llamarControlador(value) {
			var checkExistingUrl = '@Url.Action("GetDriverDataByIdDocument", "Driver")';
			$.ajax({
				url: checkExistingUrl,
				type: 'POST',
				headers: {
					"RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
				},
				data: { driverIdentityDocument: value },
				success: function (response) {
				if (response && response.driverFullName && response.driverPhone) {
					$("#DriverFullName").val(response.driverFullName);
					$("#DriverPhone").val(response.driverPhone);
					$("#SexId").val(response.driverSexId);

					$("#SexId").addClass("readonly-style");
					$("#SexId").on("click", e => e.preventDefault());

					$("#DriverFullName").prop("readonly", true);
					$("#DriverPhone").prop("readonly", true);
					$("#PartnerNumber").focus();
				} 
				else {
					$('#SexId').removeClass('readonly-style');
					$("#DriverFullName").prop("readonly", false);
					$("#DriverPhone").prop("readonly", false);

					$("#DriverFullName").val("");
					$("#DriverPhone").val("");

					$("#DriverFullName").focus();
				}
			},
			error: function (xhr, status, error) {
				console.error("Error en la petición:", error);

				$("#DriverFullName").prop("readonly", false);
				$("#DriverPhone").prop("readonly", false);

				$("#DriverFullName").val("");
				$("#DriverPhone").val("");

				},
			});
		}

		$('#inventory').DataTable({
			"language": {
				"sProcessing":    "Procesando...",
				"sLengthMenu":    "Mostrar _MENU_ registros",
				"sZeroRecords":   "No se encontraron resultados",
				"sEmptyTable":    "Ningún dato disponible en esta tabla",
				"sInfo":          "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
				"sInfoEmpty":     "Mostrando registros del 0 al 0 de un total de 0 registros",
				"sInfoFiltered":  "(filtrado de un total de _MAX_ registros)",
				"sInfoPostFix":   "",
				"sSearch":        "Buscar:",
				"sUrl":           "",
				"sInfoThousands":  ",",
				"sLoadingRecords": "Cargando...",
				"oPaginate": {
					"sFirst":    "Primero",
					"sLast":    "Último",
					"sNext":    "Siguiente",
					"sPrevious": "Anterior"
				},
				"oAria": {
					"sSortAscending":  ": Activar para ordenar la columna de manera ascendente",
					"sSortDescending": ": Activar para ordenar la columna de manera descendente"
				}
			}
		});
	});
	</script>
</body>
</html>


