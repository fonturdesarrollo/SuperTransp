@model SuperTransp.Models.SecurityUserViewModel
@{
	Layout = "";
}
<!DOCTYPE HTML>
<html>
<head>
	<title>Cambiar Clave</title>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no" />
	<link rel="stylesheet" href="~/assets/css/main.css" />
	<noscript><link rel="stylesheet" href="~/assets/css/noscript.css" /></noscript>
	<link rel="stylesheet" href="~/datatable/css/bootstrap.css" />
	<link rel="icon" type="image/x-icon" href="~/images/Logo.ico" />

	<style>
		.is-invalid {
			border: 2px solid red;
			background-color: #ffe6e6;
		}
	</style>
</head>
<body class="is-preload">
	@using (Html.BeginForm("ChangePassword", "Security", FormMethod.Post))
	{
		@Html.AntiForgeryToken()
		<!-- Wrapper -->
		<div id="wrapper">

			<!-- Header -->
			<header id="header">
				<div class="inner">

					<!-- Logo -->
					<a href="#" class="logo">
						<span class="symbol"><img src="~/images/logo_login.jpg" alt="" /></span><span class="title">SuperTransp</span>
						<br />
						<span class="title">@ViewBag.EmployeeName</span>
						<br />
						@if (TempData["SuccessMessage"] != null)
						{
							<div id="successMessage" class="alert alert-success">
								@TempData["SuccessMessage"]
							</div>
						}
					</a>
				</div>
				<!-- Nav -->
				<nav>
					<ul>
						<li><a href="#menu">Menu</a></li>
					</ul>
				</nav>
			</header>

			<!-- Menu -->
			<nav id="menu">
				<h2>Menu</h2>
				<ul>
					<li>@Html.ActionLink("Inicio", "Index", "Home")</li>
					<li>@Html.ActionLink("Salir", "Login", "Security")</li>
				</ul>
			</nav>

			<!-- Main -->
			<div id="main">
				<div class="inner">
					<!-- Form -->
					<section>
						<h1 style="color:#4cbece">Cambiar clave</h1>
						
						<br />
						<div class="row gtr-uniform">
							<div class="col-4">
								<strong>Clave Anterior:</strong>
								@Html.PasswordFor(x => x.Password, new { placeholder = "Clave Anterior", tabindex = "0", maxlength = "50", id = "oldPasswordInput" })
								@Html.HiddenFor(x => x.SecurityUserId)
								@Html.HiddenFor(x => x.SecurityUserDocumentIdNumber)
								@Html.HiddenFor(x => x.Login)
								@Html.HiddenFor(x => x.FullName)
								@Html.HiddenFor(x => x.SecurityGroupId)
								<span asp-validation-for="Password" class="text-danger"></span>
							</div>
							<div class="col-2">
								<span id="toggleOldPassword" style=transform: translateY(-50%); cursor: pointer;">
									<i class="fa fa-eye"></i>
								</span>
							</div>
							<div class="col-4">
								<strong>Nueva Clave:</strong>
								@Html.PasswordFor(x => x.NewPassword, new { placeholder = "Clave", maxlength = "50", id = "newPasswordInput", @class = "form-control" })
								<span asp-validation-for="NewPassword" class="text-danger"></span>
							</div>
							<div class="col-2">
								<span id="toggleNewPassword" style=transform: translateY(-50%); cursor: pointer;">
									<i class="fa fa-eye"></i>
								</span>
							</div>

							<div class="col-12">
								<ul class="actions">
									<li><input type="submit" value="Cambiar Clave" class="primary" id="saveRequest" /></li>
								</ul>
							</div>
						</div>
					</section>
				</div>
			</div>
		</div>
	}
	<!-- Scripts -->
	<script src="~/assets/js/jquery.min.js"></script>
	<script src="~/assets/js/browser.min.js"></script>
	<script src="~/assets/js/breakpoints.min.js"></script>
	<script src="~/assets/js/util.js"></script>
	<script src="~/assets/js/main.js"></script>
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}

	<script type="text/javascript">

		document.addEventListener("DOMContentLoaded", function() {
			const oldPasswordInput = document.getElementById("oldPasswordInput");
			const toggleOldPassword = document.getElementById("toggleOldPassword");

			toggleOldPassword.addEventListener("click", () => {

				const type = oldPasswordInput.getAttribute("type") === "password" ? "text" : "password";
				oldPasswordInput.setAttribute("type", type);

				toggleOldPassword.innerHTML = type === "password"
					? '<i class="fa fa-eye"></i>'
					: '<i class="fa fa-eye-slash"></i>';
			});
		});

		document.addEventListener("DOMContentLoaded", function() {
			const newPasswordInput = document.getElementById("newPasswordInput");
			const toggleNewPassword = document.getElementById("toggleNewPassword");

			toggleNewPassword.addEventListener("click", () => {

				const type = newPasswordInput.getAttribute("type") === "password" ? "text" : "password";
				newPasswordInput.setAttribute("type", type);

				toggleNewPassword.innerHTML = type === "password"
					? '<i class="fa fa-eye"></i>'
					: '<i class="fa fa-eye-slash"></i>';
			});
		});

		$("body").on("click", "#saveRequest", function (event) {
			event.preventDefault();

			if (!isOkToSave()) {
				return false;
			}

			if (!confirm("¿Está seguro de que desea cambiar la clave?")) {
				return false;
			}

			$(this).closest("form").trigger("submit");
		});

		$("form").submit(function (e) {
			e.preventDefault();

			if ($(this).valid()) {
				var paramValue1 = $('#oldPasswordInput').val();
				var checkExistingUrl = '@Url.Action("CheckOldPasswordExist", "Security")';

				$.ajax({
					url: checkExistingUrl,
					data: {
						paramValue1: paramValue1,
					},
					success: function (data) {
						showMsg(data);
					},
					cache: false
				});
			}
		});

		function isOkToSave() {
			let firstInvalidField = null;
			let message = "";

			if ($("#oldPasswordInput").val() == "" && !firstInvalidField) {
				firstInvalidField = "#oldPasswordInput";
				message = "Debe colocar la clave anterior";
			}

			if ($("#newPasswordInput").val() == "" && !firstInvalidField) {
				firstInvalidField = "#newPasswordInput";
				message = "Debe colocar la nueva clave";
			}

			if (firstInvalidField) {
				showAlert(message, firstInvalidField);
				return false;
			}

			return true;
		}

		function showAlert(message, selector) {
			alert(message);
			highlightErrorField(selector);
			$(selector).focus();
		}

		function highlightErrorField(selector) {
			$(selector).addClass("is-invalid");
			$(selector).on("input", function () {
				$(this).removeClass("is-invalid");
			});

			$(selector)[0].scrollIntoView({ behavior: "smooth", block: "center" });
		}

		function showMsg(hasCurrentJob) {
			if (hasCurrentJob != "OK") {
				alert(hasCurrentJob);
				return false;
			} else {

				$("form").unbind('submit').submit();
			}
		}

		$(document).ready(function () {
			setTimeout(function(){
				$("#successMessage").fadeOut("slow");
			}, 2500);

		});
	</script>
</body>
</html>


