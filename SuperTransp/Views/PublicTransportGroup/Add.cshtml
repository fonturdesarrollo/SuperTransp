@model SuperTransp.Models.PublicTransportGroupViewModel
@{
	Layout = "";
}
<!DOCTYPE HTML>
<html>
<head>
	<title>Agregar Organización de Transporte</title>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no" />
	<link rel="stylesheet" href="~/assets/css/main.css" />
	<noscript><link rel="stylesheet" href="~/assets/css/noscript.css" /></noscript>
	<link rel="stylesheet" href="~/datatable/css/bootstrap.css" />
	<link rel="icon" type="image/x-icon" href="~/images/Logo.ico" />

	<style>
		.is-invalid {
			border: 2px solid red;
			background-color: #ffe6e6;
		}
	</style>
</head>
<body class="is-preload">
	@using (Html.BeginForm("Add", "PublicTransportGroup", FormMethod.Post))
	{
		@Html.AntiForgeryToken()
		<!-- Wrapper -->
		<div id="wrapper">

			<!-- Header -->
			<header id="header">
				<div class="inner">

					<!-- Logo -->
					<a href="#" class="logo">
						<span><img src="~/images/Logo.png" width="100px" height="100px" alt="" /></span>
						<br />
						<span class="title">@ViewBag.EmployeeName</span>
						<br />
						@if (TempData["SuccessMessage"] != null)
						{
							<div id="successMessage" class="alert alert-success">
								@TempData["SuccessMessage"]
							</div>
						}
					</a>
				</div>
				<!-- Nav -->
				<nav>
					<ul>
						<li><a href="#menu">Menu</a></li>
					</ul>
				</nav>
			</header>

			<!-- Menu -->
			<nav id="menu">
				<h2>Menu</h2>
				<ul>
					<li>@Html.ActionLink("Inicio", "Index", "Home")</li>
					<li>@Html.ActionLink("Modificar organización", "PublicTransportGroupList", "PublicTransportGroup")</li>
					<li>@Html.ActionLink("Agregar socios a organización", "PublicTransportGroupList", "Driver")</li>
					<li>@Html.ActionLink("Salir", "Login", "Security")</li>
				</ul>
			</nav>

			<!-- Main -->
			<div id="main">
				<div class="inner">
					<!-- Form -->
					<section>
						<h1 style="color:#4cbece">Agregar organización de transporte</h1>
						<br />
						<div class="row gtr-uniform">
							<div class="col-6">
								<strong>RIF:</strong>
								@Html.HiddenFor(x => x.PublicTransportGroupIdModifiedDate)
								@Html.TextBoxFor(x => x.PublicTransportGroupRif, new { placeholder = "RIF", tabindex = "0", maxlength = "10" })
								<span asp-validation-for="PublicTransportGroupRif" class="text-danger"></span>
							</div>
							<div class="col-6 col-12-xsmall">
								<strong>Entidad legal:</strong>
								@Html.DropDownListFor(t => t.DesignationId, (SelectList)ViewBag.Designation, "-- Seleccione --", new { @class = "form-control" })
							</div>
							<div class="col-12">
								<strong>Nombre:</strong>
								@Html.TextBoxFor(x => x.PublicTransportGroupName, new { placeholder = "Nombre de la organización de transporte", maxlength = "100" })
								<span asp-validation-for="PublicTransportGroupName" class="text-danger"></span>
							</div>
							<div class="col-6 col-12-xsmall">
								<strong>Modalidad:</strong>
								@Html.DropDownListFor(t => t.ModeId, (SelectList)ViewBag.Mode, "-- Seleccione --", new { @class = "form-control" })
							</div>
							<div class="col-6 col-12-xsmall">
								<strong>Gremio o Sindicato:</strong>
								@Html.DropDownListFor(t => t.UnionId, (SelectList)ViewBag.Union, "-- Seleccione --", new { @class = "form-control" })
							</div>
							<div class="col-6 col-12-xsmall">
								<strong>Estado:</strong>
								@Html.DropDownListFor(t => t.StateId, (SelectList)ViewBag.States, "-- Seleccione --", new { @class = "form-control" })
							</div>
							<div class="col-6 col-12-xsmall">
								<strong>Municipio:</strong>
								<select id="MunicipalityId" name="MunicipalityId" class="form-control">
									<option value="">Seleccione un municipio</option>
								</select>
							</div>
							<div class="col-6">
								<strong>Cédula Representante:</strong>
								@Html.TextBoxFor(x => x.RepresentativeIdentityDocument, new { placeholder = "Cédula Representante", maxlength = "8" })
								<span asp-validation-for="RepresentativeIdentityDocument" class="text-danger"></span>
							</div>
							<div class="col-6">
								<strong>Nombre Representante:</strong>
								@Html.TextBoxFor(x => x.RepresentativeName, new { placeholder = "Nombre del Representante", maxlength = "50" })
								<span asp-validation-for="RepresentativeName" class="text-danger"></span>
							</div>
							<div class="col-6">
								<strong>Teléfono Representante:</strong>
								@Html.TextBoxFor(x => x.RepresentativePhone, new { placeholder = "Teléfono del Representante", maxlength = "11" })
								<span asp-validation-for="RepresentativePhone" class="text-danger"></span>
							</div>
							<div class="col-6">
								<strong>Cantidad de Socios:</strong>
								@Html.TextBoxFor(x => x.Partners, new { placeholder = "Cantidad de Socios", maxlength = "3" })
								<span asp-validation-for="Partners" class="text-danger"></span>
							</div>
							<div class="col-12">
								<ul class="actions">
									@{
										if (ViewBag.IsTotalAccess)
										{
											<li><button type="submit" id="saveRequest" class="primary">Actualizar</button></li>
										}
									}									
								</ul>
							</div>
						</div>
					</section>
				</div>
			</div>
			<!-- Footer -->
@* 			<footer id="footer">
				<div class="inner">
					<label style="text-align:right">&copy; Sistema para la Supervisión de Unidades de Transporte</label>
				</div>
			</footer> *@
		</div>
	}
	<!-- Scripts -->
	<script src="~/assets/js/jquery.min.js"></script>
	<script src="~/assets/js/browser.min.js"></script>
	<script src="~/assets/js/breakpoints.min.js"></script>
	<script src="~/assets/js/util.js"></script>
	<script src="~/assets/js/main.js"></script>
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}

	<script type="text/javascript">

		document.addEventListener("DOMContentLoaded", function () {
			var inputElement = document.querySelector("[name='PublicTransportGroupRif']");

			inputElement.addEventListener("input", function () {
				var value = inputElement.value;

				if (value.length > 0 && !/^[JjVv]/.test(value[0])) {
					value = "J" + value;
				}

				value = value.replace(/[^JjVv0-9]/g, "");

				if (/^[Jj]/.test(value)) {
					value = "J" + value.slice(1);
				} else if (/^[Vv]/.test(value)) {
					value = "V" + value.slice(1);
				}

				if (value.length > 1 && /^[JV]/.test(value[0])) {
					value = value[0] + value.slice(1).replace(/[JV]/gi, "");
				}

				inputElement.value = value;
			});
		});

		document.addEventListener("DOMContentLoaded", function () {
			function handleInput(selector, transformFunction) {
				var inputElement = document.querySelector(selector);
				if (inputElement) {
					inputElement.addEventListener("input", function () {
						inputElement.value = transformFunction(inputElement.value);
					});
				}
			}

			handleInput("[name='PublicTransportGroupName']", function (value) {
				return value.toUpperCase();
			});

			handleInput("[name='RepresentativeName']", function (value) {
				return value.toUpperCase();
			});

			handleInput("[name='RepresentativeIdentityDocument']", function (value) {
				return value.replace(/[^0-9]/g, "");
			});

			handleInput("[name='RepresentativePhone']", function (value) {
				return value.replace(/[^0-9]/g, "");
			});

			handleInput("[name='Partners']", function (value) {
				return value.replace(/[^0-9]/g, "");
			});
		});

		$("body").on("click", "#saveRequest", function (event) {
			event.preventDefault();

			if (!isOkToSave()) {
				return false;
			}

			if (!confirm("¿Está seguro de que desea actualizar los registros?")) {
				return false;
			}

			$(this).closest("form").trigger("submit");
		});

		$("form").on("submit", function (e) {
			e.preventDefault();

			if ($(this).valid()) {
				var paramValue1 = $('#PublicTransportGroupRif').val();
				var checkExistingUrl = '@Url.Action("CheckRifExist", "PublicTransportGroup")';
				$.ajax({
					url: checkExistingUrl,
					data: {
						paramValue1: paramValue1,
					},
					success: function (data) {
						showMsg(data);
					},
					cache: false
				});
			}
		});

		function isOkToSave() {
			let firstInvalidField = null;
			let message = "";

			if ($("#PublicTransportGroupRif").val() != "" && !firstInvalidField) {
				const rifValue = $("#PublicTransportGroupRif").val();

				const containsJ = rifValue.includes("J");
				const numberCount = rifValue.replace(/\D/g, "").length;

				if (containsJ && numberCount < 9) {
					firstInvalidField = "#PublicTransportGroupRif";
					message = "Debe colocar un RIF válido";
				} else {

					message = "Debe colocar el RIF";
				}
			}

			if ($("#PublicTransportGroupRif").val() == "" && !firstInvalidField) {
				firstInvalidField = "#PublicTransportGroupRif";
				message = "Debe colocar el RIF";
			}

			if ($("#DesignationId").val() == "" && !firstInvalidField) {
				firstInvalidField = "#DesignationId";
				message = "Debe seleccionar la nomenclatura";
			}

			if ($("#PublicTransportGroupName").val() == "" && !firstInvalidField) {
				firstInvalidField = "#PublicTransportGroupName";
				message = "Debe colocar el nombre de la organización";
			} else {
				const fullName = $("#PublicTransportGroupName").val().trim();
				const regex = /^[a-zA-ZñÑ0-9\s]{5,}$/;

				if (!regex.test(fullName)) {
					if (!firstInvalidField) {
						firstInvalidField = "#PublicTransportGroupName";
					}
					message = "El nombre debe contener solo letras, números y espacios, y al menos 5 caracteres.";
				}
			}

			if ($("#ModeId").val() == "" && !firstInvalidField) {
				firstInvalidField = "#ModeId";
				message = "Debe seleccionar la modalidad";
			}

			if ($("#UnionId").val() == "" && !firstInvalidField) {
				firstInvalidField = "#UnionId";
				message = "Debe seleccionar el gremio o sindicato";
			}

			if ($("#StateId").val() == "" && !firstInvalidField) {
				firstInvalidField = "#StateId";
				message = "Debe seleccionar el estado";
			}

			if ($("#MunicipalityId").val() == "" && !firstInvalidField) {
				firstInvalidField = "#MunicipalityId";
				message = "Debe seleccionar el municipio";
			}

			if (!firstInvalidField) {
				const identityValue = $("#RepresentativeIdentityDocument").val();

				if (identityValue == "" || identityValue.length < 7) {
					firstInvalidField = "#RepresentativeIdentityDocument";
					message = "Debe colocar un número de cédula válido";
				}
			}

			if ($("#RepresentativeIdentityDocument").val() == "" && !firstInvalidField) {
				firstInvalidField = "#RepresentativeIdentityDocument";
				message = "Debe colocar el número de cédula del representante";
			}

			if ($("#RepresentativeName").val() == "" && !firstInvalidField) {
				firstInvalidField = "#RepresentativeName";
				message = "Debe colocar el nombre del representante";
			} else {
				const fullName = $("#RepresentativeName").val().trim();
				const regex = /^[a-zA-Z\s]{5,}$/;

				if (!regex.test(fullName)) {
					if (!firstInvalidField) {
						firstInvalidField = "#RepresentativeName";
					}
					message = "El nombre debe contener solo letras y espacios, y al menos 5 caracteres.";
				}
			}

			if (!firstInvalidField) {
				const identityValue = $("#RepresentativePhone").val();

				if (identityValue == "" || identityValue.length < 11) {
					firstInvalidField = "#RepresentativePhone";
					message = "Debe colocar un número de télefono válido";
				}
			}

			if ($("#RepresentativePhone").val() == "" && !firstInvalidField) {
				firstInvalidField = "#RepresentativePhone";
				message = "Debe colocar el número de teléfono del representante";
			}

			if ($("#Partners").val() == "" && !firstInvalidField) {
				firstInvalidField = "#Partners";
				message = "Debe colocar la cantidad de socios";
			}

			if ($("#Partners").val() == "0" && !firstInvalidField) {
				firstInvalidField = "#Partners";
				message = "La cantidad de socios no puede ser cero";
			}

			if (firstInvalidField) {
				showAlert(message, firstInvalidField);
				return false;
			}

			return true;
		}

		function showAlert(message, selector) {
			alert(message);
			highlightErrorField(selector);
			$(selector).focus();
		}

		function highlightErrorField(selector) {
			$(selector).addClass("is-invalid");
			$(selector).on("input", function () {
				$(this).removeClass("is-invalid");
			});

			$(selector)[0].scrollIntoView({ behavior: "smooth", block: "center" });
		}


		function showMsg(hasCurrentJob) {
			if (hasCurrentJob != "OK") {
				alert(hasCurrentJob);
				return false;
			} else {

				$("form").unbind('submit').submit();
			}
		}

		$(document).ready(function () {

			setTimeout(function(){
				$("#successMessage").fadeOut("slow");
			}, 2500);

			$('#PublicTransportGroupName').on('input', function() {
				const value = $(this).val();
				const sanitizedValue = value.replace(/[^a-zA-ZñÑ0-9\s]/g, '');
				$(this).val(sanitizedValue);
			});

			$('#RepresentativeName').on('input', function() {
				const value = $(this).val();
				const sanitizedValue = value.replace(/[^a-zA-Z\s]/g, '');
				$(this).val(sanitizedValue);
			});

			$('#StateId').change(function () {
				var stateId = $(this).val();
				var getMunicipalityUrl = '@Url.Action("GetMunicipality", "PublicTransportGroup")';

				$('#MunicipalityId').empty().append('<option value="">Seleccione un municipio</option>');

				if (stateId) {
					$.getJSON(getMunicipalityUrl, { stateId: stateId }, function (data) {
						$.each(data, function (index, municipality) {
							$('#MunicipalityId').append($('<option>', {
								value: municipality.municipalityId,
								text: municipality.municipalityName
							}));
						});
					});
				}
			});
		});
	</script>
</body>
</html>


