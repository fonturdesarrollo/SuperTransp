@model SuperTransp.Models.SupervisionViewModel
@{
	Layout = "";
}
<!DOCTYPE HTML>
<html>
<head>
	<title>Vehículo Supervisado</title>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no" />
	<link rel="stylesheet" href="~/assets/css/main.css" />
	<noscript><link rel="stylesheet" href="~/assets/css/noscript.css" /></noscript>
	<link rel="stylesheet" href="~/datatable/css/bootstrap.css" />
	<link rel="icon" type="image/x-icon" href="~/images/Logo.ico" />

	@* DropZone************************************************************************************ *@
    <link href="~/plugins/dropzone/dropzone.min.css" rel="stylesheet" />
	@* ************************************************************************************ *@

	<style>
		.is-invalid {
			border: 2px solid red;
			background-color: #ffe6e6;
		}

		#additionalFields {
			visibility: hidden;
			opacity: 0;
			height: 0;
			overflow: hidden;
			transition: opacity 0.3s ease-in-out, height 0.3s ease-in-out;
		}

		.custom-textarea {
			border: 2px solid;
		}

		.custom-textbox {
			border: 2px solid;
		}

		.error-highlight {
			border: 2px solid red;
		}
	</style>
</head>
<body class="is-preload">
	@{
		bool isTotalAccess = ViewBag.IsTotalAccess != null && ViewBag.IsTotalAccess is bool && ViewBag.IsTotalAccess == true;
	}
	@using (Html.BeginForm("Add", "Supervision", FormMethod.Post))
	{
		@Html.AntiForgeryToken()
		<!-- Wrapper -->
		<div id="wrapper">

			<!-- Header -->
			<header id="header">
				<div class="inner">

					<!-- Logo -->
					<a href="#" class="logo">
						<span><img src="~/images/Logo.png" width="100px" height="100px" alt="" /></span>
						<br />
						<span class="title">@ViewBag.EmployeeName</span>
						<br />
						@if (TempData["SuccessMessage"] != null)
						{
							<div id="successMessage" class="alert alert-success">
								@TempData["SuccessMessage"]
							</div>
						}
					</a>
				</div>
				<!-- Nav -->
				<nav>
					<ul>
						<li><a href="#menu">Menu</a></li>
					</ul>
				</nav>
			</header>

			<!-- Menu -->
			<nav id="menu">
				<h2>Menu</h2>
				<ul>
					<li>@Html.ActionLink("Inicio", "Index", "Home")</li>
					<li>@Html.ActionLink("Seleccionar socio", "PublicTransportGroupDriverList", "Supervision", new { ptgRifName = Model.PublicTransportGroupRif }, null)</li>
					<li>@Html.ActionLink("Agregar resumen de supervisión", "PublicTransportGroupList", "Supervision")</li>
					<li>@Html.ActionLink("Modificar resumen de supervisión", "SummaryList", "Supervision")</li>
					<li>@Html.ActionLink("Supervisión", "Index", "Supervision")</li>
					<li>@Html.ActionLink("Salir", "Login", "Security")</li>
				</ul>
			</nav>

			<!-- Main -->
			<div id="main">
				<div class="inner">
					<!-- Form -->
					<section>
						<h1 style="color:#4cbece">Vehículo Supervisado</h1>
						<label>Vuelta: @ViewBag.CurrentRoundStartDate</label><br />
						<label>Organización: @Model.PublicTransportGroupRif @Model.PTGCompleteName</label><br />
						<label>Tipo: @Model.ModeName</label><br />
						<label>Nombre Socio: @Model.DriverIdentityDocument @Model.DriverFullName</label><br />
						<label>Socio: @Model.PartnerNumber</label>
						<br />
						<br />
						<br />
						<div class="row gtr-uniform">
							<div class="col-12">
								<strong>¿Posee vehículo?:</strong>
								@Html.HiddenFor(x => x.PTGCompleteName)
								@Html.HiddenFor(x => x.PublicTransportGroupId)
								@Html.HiddenFor(x => x.DriverIdentityDocument)
								@Html.HiddenFor(x => x.StateName)
								@Html.HiddenFor(x => x.DriverId)
								@Html.HiddenFor(x => x.SecurityUserId)
								@Html.HiddenFor(x => x.SupervisionId)
								@Html.HiddenFor(x => x.PartnerNumber)
								@Html.HiddenFor(x => x.PublicTransportGroupRif)
								@Html.HiddenFor(x => x.ModeId)
								@Html.HiddenFor(x => x.Pictures)
								@Html.HiddenFor(x => x.StateId)
								@Html.DropDownListFor(t => t.DriverWithVehicle, (SelectList)ViewBag.DriverWithVehicle, "-- Seleccione --", new { @class = "form-control" })
							</div>
							<div class="row" id="additionalFields" style="visibility: hidden; opacity: 0; height: 0; overflow: hidden; transition: opacity 0.3s ease-in-out;">
								<div class="col-4">
									<strong>¿Socio presente?:</strong>
									@Html.DropDownListFor(t => t.InPerson, (SelectList)ViewBag.InPerson, "-- Seleccione --", new { @class = "form-control" })
								</div>
								<div class="col-4">
									<strong>¿Vehículo operativo?:</strong>
									@Html.DropDownListFor(t => t.WorkingVehicle, (SelectList)ViewBag.WorkingVehicle, "-- Seleccione --", new { @class = "form-control" })
								</div>
								<div class="col-4">
									<strong>Tipo de falla vehículo:</strong>
									@Html.DropDownListFor(t => t.FailureTypeId, (SelectList)ViewBag.FailureType, "-- Seleccione --", new { @class = "form-control" })
								</div>
								<div class="col-12">
									<br />
									<strong>Placa:</strong>
									@Html.TextBoxFor(x => x.Plate, new { placeholder = "Número de placa", maxlength = "7", @class = "custom-textbox" })
								</div>
								<div class="col-6">
									<br />
									<strong>Año:</strong>
									@Html.DropDownListFor(t => t.Year, (SelectList)ViewBag.Years, "-- Seleccione --", new { @class = "form-control" })
								</div>
								<div class="col-6">
									<br />
									<strong>Marca:</strong>
									@Html.DropDownListFor(t => t.Make, (SelectList)ViewBag.Makes, "-- Seleccione --", new { @class = "form-control" })
								</div>
								<div class="col-6">
									<br />
									<strong>Modelo:</strong>
									@Html.DropDownListFor(t => t.VehicleDataId, (SelectList)ViewBag.VehicleModel, "-- Seleccione --", new { @class = "form-control" })
								</div>
								<div class="col-6">
									<br />
									<strong>Puestos:</strong>
									@Html.DropDownListFor(t => t.Passengers, (SelectList)ViewBag.Passengers, "-- Seleccione --", new { @class = "form-control" })
								</div>
								<div class="col-6">
									<br />
									<strong>Medida neumáticos:</strong>
									@Html.DropDownListFor(t => t.RimId, (SelectList)ViewBag.Rims, "-- Seleccione --", new { @class = "form-control" })
								</div>
								<div class="col-6">
									<br />
									<strong>Cantidad neumáticos:</strong>
									@Html.DropDownListFor(t => t.Wheels, (SelectList)ViewBag.Wheels, "-- Seleccione --", new { @class = "form-control" })
								</div>
								<div class="col-6">
									<br />
									<strong>Tipo combustible:</strong>
									@Html.DropDownListFor(t => t.FuelTypeId, (SelectList)ViewBag.FuelTypes, "-- Seleccione --", new { @class = "form-control" })
								</div>
								<div class="col-6">
									<br />
									<strong>Capacidad tanque:</strong>
									@Html.DropDownListFor(t => t.TankCapacity, (SelectList)ViewBag.TankCapacity, "-- Seleccione --", new { @class = "form-control" })
								</div>
								<div class="col-6">
									<br />
									<strong>Tipo batería:</strong>
									@Html.DropDownListFor(t => t.BatteryId, (SelectList)ViewBag.Batteries, "-- Seleccione --", new { @class = "form-control" })
								</div>
								<div class="col-6">
									<br />
									<strong>Cantidad baterias:</strong>
									@Html.DropDownListFor(t => t.NumberOfBatteries, (SelectList)ViewBag.NumberOfBatteries, "-- Seleccione --", new { @class = "form-control" })
								</div>
								<div class="col-6">
									<br />
									<strong>Tipo de aceite:</strong>
									@Html.DropDownListFor(t => t.MotorOilId, (SelectList)ViewBag.MotorOil, "-- Seleccione --", new { @class = "form-control" })
								</div>
								<div class="col-6">
									<br />
									<strong>Litros:</strong>
									@Html.DropDownListFor(t => t.Liters, (SelectList)ViewBag.OilLitters, "-- Seleccione --", new { @class = "form-control" })
								</div>
								<div class="col-6">
									<br />
									<strong>Problema huella:</strong>
									@Html.DropDownListFor(t => t.FingerprintTrouble, (SelectList)ViewBag.FingerprintProblem, "-- Seleccione --", new { @class = "form-control" })
								</div>
								<div class="col-12">
									<br />
									<strong>Observaciones:</strong>
									@Html.TextAreaFor(x => x.Remarks, new
										{
											@class = "custom-textarea",
											placeholder = "Observaciones",
											maxlength = "500"
										})
								</div>
								<div class="col-12">
									<br />							
									<strong>Imágenes:</strong>
									<div id="thumbnail-container"></div>																			
								</div>
								<div class="col-12">
									<br />
									<strong>Cargar imágenes:</strong>
									<div id="myDropzone"
										 class="dropzone @(isTotalAccess ? "dz-clickable" : "dz-disabled")"
										 style="@(isTotalAccess ? "" : "pointer-events:none; opacity:0.6;")">
										@{
											if (Model.Pictures != null && Model.Pictures.Any())
											{
												<div class="dz-message">
													Si desea sustituir las imágenes actuales haga clic aquí para subirlas
												</div>
											}
											else
											{
												<div class="dz-message">
													Haga clic aquí para subir las imágenes
												</div>
											}
										}
									</div>
								</div>
								<div class="col-12">
									<br />
									<ul class="actions">
										@{
											if(ViewBag.IsTotalAccess)
											{
												<li><button type="submit" id="saveRequest" class="primary">Actualizar registros</button></li>
												<li style="margin-left:auto;">
													<button id="btnDeleteImages" type="button" class="primary">
														Eliminar imágenes de la lista
													</button>
												</li>
											}
										}
									</ul>
								</div>
							</div>

						</div>
					</section>
				</div>
			</div>
			<div id="loadingOverlay" style="
	        display:none;
	        position:fixed;
	        top:0;left:0;
	        width:100%;height:100%;
	        background:rgba(255,255,255,0.7);
	        z-index:9999;
	        text-align:center;
	        padding-top:200px;
	        font-size:20px;">
				<i class="fas fa-spinner fa-spin fa-3x"></i>
				<p>Procesando, por favor espere...</p>
			</div>
		</div>
	}
	<!-- Scripts -->
	<script src="~/assets/js/jquery.min.js"></script>
	<script src="~/assets/js/browser.min.js"></script>
	<script src="~/assets/js/breakpoints.min.js"></script>
	<script src="~/assets/js/util.js"></script>
	<script src="~/assets/js/main.js"></script>

	@* DropZone************************************************************************************ *@
	<script src="~/plugins/dropzone/dropzone.min.js"></script>
	@* ************************************************************************************ *@

	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}

	<!-- Variables para JS externo -->
	<script>
		window.supervisionEditData = {
			saveFilesUrl: '@Url.Action("SaveFiles", "Supervision")',
			deleteAllPicturesUrl: '@Url.Action("DeleteAllSupervisionPictures", "Supervision")',
			checkExistingPlateUrl: '@Url.Action("CheckExistingPlate", "Supervision")',
			getMakesUrl: '@Url.Action("GetMakes", "Supervision")',
			getModelsUrl: '@Url.Action("GetModels", "Supervision")',
			partnerNumber: '@Model.PartnerNumber',
			publicTransportGroupRif: '@Model.PublicTransportGroupRif',
			publicTransportGroupId: '@Model.PublicTransportGroupId',
			driverId: '@Model.DriverId',
			isTotalAccess: @((isTotalAccess).ToString().ToLower()),
			fileUrls: @Html.Raw(Json.Serialize(Model.Pictures.Select(p => p.VehicleImageUrl))),
			pictures: @Html.Raw(Json.Serialize(Model.Pictures)),
			driverWithVehicle: '@Model.DriverWithVehicle',
			modeId: '@Model.ModeId',
			pdfIconUrl: '@Url.Content("~/images/pdf-icon.png")'
		};
	</script>
	<script src="~/js/supervision-edit.js"></script>
</body>
</html>