@{
	Layout = "";
}
<!DOCTYPE HTML>
<html>
<head>
	<title>Supervisión</title>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no" />
	<link rel="stylesheet" href="~/assets/css/main.css" />
	<noscript><link rel="stylesheet" href="~/assets/css/noscript.css" /></noscript>
	<link rel="icon" type="image/x-icon" href="~/images/Logo.ico" />

	<style>
		.modal {
			display: none;
			position: fixed;
			z-index: 999;
			left: 0;
			top: 0;
			width: 100%;
			height: 100%;
			overflow: auto;
			background-color: rgba(0,0,0,0.5);
		}

		.modal-content {
			background-color: #fff;
			margin: 10% auto;
			padding: 20px;
			border-radius: 8px;
			width: 50%;
		}

		.close {
			color: #aaa;
			float: right;
			font-size: 28px;
			cursor: pointer;
		}

		.btn-align-right {
			margin-top: 15px;
			float: right;
		}

		.is-invalid {
			border: 2px solid red;
			background-color: #ffe6e6;
		}

		.custom-success {
            background-color: green; /* fondo verde */
			color: #ffffff; /* letras blancas */
			padding: 15px;
			border-radius: 5px;
			margin-top: 10px;
			text-align: center;
			font-weight: bold;
			box-shadow: 0 2px 8px rgba(0,0,0,0.2);
		}
	</style>
</head>
<body class="is-preload">
	@using (Html.BeginForm("AccesLogin", "Login", FormMethod.Post))
	{
		@Html.AntiForgeryToken()
		<!-- Wrapper -->
		<div id="wrapper"
			 data-check-valid-round-url="@Url.Action("CheckValidRound", "Supervision")">			

			<!-- Header -->
			<header id="header">
				<div class="inner">
					<!-- Logo -->
					<a href="#" class="logo">
						<span><img src="~/images/Logo.png" width="100px" height="100px" alt="" /></span>
						<br />
						<span>@ViewBag.EmployeeName</span>
						<br />
						<span>Agregar supervisión a organizaciones de transporte</span>
						<br />
						@if (TempData["SuccessMessage"] != null)
						{
							<div id="successMessage" class="custom-success">
								@TempData["SuccessMessage"]
							</div>
						}
					</a>
				</div>

				<!-- Nav -->
				<nav>
					<ul>
						<li><a href="#menu">Menu</a></li>
					</ul>
				</nav>
			</header>

			<!-- Menu -->
			<nav id="menu">
				<h2>Menu</h2>
				<ul>
					<li>@Html.ActionLink("Inicio", "Index", "Home")</li>
					<li>@Html.ActionLink("Salir", "Login", "Security")</li>
				</ul>
			</nav>

			<div id="main">
				<div class="inner">
					<!-- Form -->
					<br />
					<section>
						<h3>Opciones</h3>
						<div class="row">
							<div class="col-6 col-12-medium">
								<h3>Supervisión</h3>
								<h4>@ViewBag.RoundMessage</h4>
								@{
									if (ViewBag.RoundActive == true)
									{
										<ul>
											<li><a href="#" id="openModal">Supervisar organizaciones de transporte</a></li>
											<li>@Html.ActionLink("Agregar resumen de supervisión", "PublicTransportGroupList", "Supervision")</li>
											<li>@Html.ActionLink("Modificar resumen de supervisión", "SummaryList", "Supervision")</li>
										</ul>
									}
								}
							</div>
							@{
								var modulesInGroup = (IEnumerable<SecurityModuleModel>)ViewBag.ModulesInGroup;								

								if (ViewBag.SecurityGroupId == 1 || modulesInGroup.Any(x => x.SecurityModuleId == 24))
								{
									if (ViewBag.RoundActive == false)
									{
										<div class="col-6 col-12-medium">
											<h3>Vueltas de supervisión</h3>
											<ul>
												<li><a href="#" id="openRoundModal">Abrir vuelta de supervisión</a></li>
											</ul>
										</div>
									}
									else
									{
										<div class="col-6 col-12-medium">
											@if(ViewBag.SecurityGroupId == 1 || modulesInGroup.Any(x => x.SecurityModuleId == 25))
											{
												<h3>Vueltas de supervisión</h3>
												<ul>
													<li><a href="#" id="closeRoundModal">Cerrar vuelta de supervisión</a></li>
												</ul>
											}
										</div>
									}
								}
							}
						</div>
					</section>
				</div>
			</div>
			<!-- Footer -->
			<footer id="footer">
				<label style="text-align:center">
					Sistema para la Supervisión de Organizaciones de Transporte &copy; @DateTime.Now.Year
				</label>
			</footer>
		</div>
	}

	<div id="modalForm" class="modal">
		<div class="modal-content">
			<span class="close">&times;</span>
			<h3>Indique el RIF</h3>
			@using (Html.BeginForm("PublicTransportGroupDriverList", "Supervision", FormMethod.Post))
			{
				@Html.AntiForgeryToken()
				<label for="ptgRifId">RIF</label>
				<input type="text" name="ptgRifName" id="ptgRifId" maxlength="10" />
				<input type="submit" value="Buscar" id="sendRequest" class="btn-align-right" />
			}
		</div>
	</div>

	<div id="modalRoundForm" class="modal">
		<div class="modal-content">
			<span class="close">&times;</span>
			<h3>Indique los datos de apertura</h3>
			@using (Html.BeginForm("AddSupervisionRound", "Supervision", FormMethod.Post))
			{
				@Html.AntiForgeryToken()
				<section>
					<div class="row">
						<div class="col-12 col-12-medium">
							<label>Estado</label>
							@Html.DropDownList("stateId", (SelectList)ViewBag.States, "-- Seleccione --", new { @class = "form-control" })
							<br />
						</div>
						<div class="col-6 col-6-medium">
							<label>Mes</label>
							@Html.DropDownList("monthValue", (SelectList)ViewBag.Months, "-- Seleccione --", new { @class = "form-control" })
						</div>
						<div class="col-6 col-6-medium">
							<label>Año</label>
							@Html.DropDownList("yearValue", (SelectList)ViewBag.Years, "-- Seleccione --", new { @class = "form-control" })
						</div>
						<div class="col-12 col-12-medium">
							<br />
							<label>Descripción</label>
							@Html.TextBox("supervisionRoundDescription", "", new { maxlength = "50", placeholder = $"Ejemplo: Inicio de la primera vuelta de supervisiones año: {DateTime.Now.Year}" })
						</div>	
					</div>
				</section>

				<input type="submit" value="Iniciar" id="sendOpenRoundRequest" class="btn-align-right" />
			}
		</div>
	</div>

	<!-- Scripts -->
	<script src="~/assets/js/jquery.min.js"></script>
	<script src="~/assets/js/browser.min.js"></script>
	<script src="~/assets/js/breakpoints.min.js"></script>
	<script src="~/assets/js/util.js"></script>
	<script src="~/assets/js/main.js"></script>
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
	<!-- Integración del JS externo -->
	<script src="~/js/supervision-index.js"></script>
</body>
</html>